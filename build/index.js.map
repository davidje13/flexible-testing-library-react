{"version":3,"sources":["webpack://flexible-testing-library-react/webpack/universalModuleDefinition","webpack://flexible-testing-library-react/webpack/bootstrap","webpack://flexible-testing-library-react/external \"@testing-library/react\"","webpack://flexible-testing-library-react/./src/baseQueries.ts","webpack://flexible-testing-library-react/./src/screen.ts","webpack://flexible-testing-library-react/external \"@testing-library/dom\"","webpack://flexible-testing-library-react/./src/queries/index.ts","webpack://flexible-testing-library-react/./src/index.ts"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","getMultipleElementsFoundError","container","query","getElementError","description","multipleErrorDetail","filter","join","elementListToArray","elements","Array","isArray","from","queryAllBy","queryAll","queryBy","length","getAllBy","getAll","missingErrorDetail","getNoElementFoundError","getBy","findAllBy","waitOptions","waitFor","findBy","body","document","undefined","screen","debug","baseScreen","getQueriesForElement","baseQueries","Proxy","target","findAllByText","constScreen","altText","options","queryAllByAltText","displayValue","queryAllByDisplayValue","labelText","queryAllByLabelText","getAllByLabelText","attribute","queryAllByAttribute","placeholderText","queryAllByPlaceholderText","role","roleName","queryAllByRole","testId","id","queryAllByTestId","text","queryAllByText","textFragment","exact","title","queryAllByTitle","render","ui","baseRender","queries"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,iCAAkC,GAAIH,GACnB,iBAAZC,QACdA,QAAQ,kCAAoCD,IAE5CD,EAAK,kCAAoCC,IAR3C,CASGK,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,G,gBClFrDtC,EAAOD,QAAUwC,QAAQ,2B,6BCAzB,qQAOA,SAASC,EAA8BC,EAAwBC,GAC7D,OAAOC,0BACL,CACG,2BAA0BD,EAAME,eACjCF,EAAMG,oBACN,mFACAC,OAAQT,GAAMA,GAAGU,KAAK,KACxBN,GAcJ,SAASO,EAAmBC,GAC1B,OAAKA,EAGDC,MAAMC,QAAQF,GACTA,EAEFC,MAAME,KAAKH,GALT,GAQJ,MAAMI,EAAa,CACxBZ,EACAC,IACkBM,EAAmBN,EAAMY,SAASb,IAEzCc,EAAU,CACrBd,EACAC,KAEA,MAAMO,EAAWI,EAAWZ,EAAWC,GACvC,GAAIO,EAASO,OAAS,EACpB,MAAMhB,EAA8BC,EAAWC,GAEjD,OAAOO,EAAS,IAAM,MAGXQ,EAAW,CACtBhB,EACAC,KAEA,MACMO,EAAWD,GADNN,EAAMgB,QAAUhB,EAAMY,UACMb,IACvC,IAAKQ,EAASO,OACZ,MA3CJ,SAAgCf,EAAwBC,GACtD,OAAOC,0BACL,CACG,8BAA6BD,EAAME,eACpCF,EAAMiB,oBACNb,OAAQT,GAAMA,GAAGU,KAAK,KACxBN,GAqCMmB,CAAuBnB,EAAWC,GAE1C,OAAOO,GAGIY,EAAQ,CACnBpB,EACAC,KAEA,MAAMO,EAAWQ,EAAShB,EAAWC,GACrC,GAAIO,EAASO,OAAS,EACpB,MAAMhB,EAA8BC,EAAWC,GAEjD,OAAOO,EAAS,IAGLa,EAAY,CACvBrB,EACAC,EACAqB,IAC2BC,kBAC3B,IAAMP,EAAShB,EAAWC,GAC1BqB,GAGWE,EAAS,CACpBxB,EACAC,EACAqB,IACyBC,kBACzB,IAAMH,EAAMpB,EAAWC,GACvBqB,I,qYCtFF,MAAMG,EAA2B,oBAAbC,SAA2BA,SAASD,UAAOE,EAC/D,IAAIC,E,+VAAS,CAAH,CACRC,MAAOC,SAAWD,OACfE,+BAAqBN,EAAOO,IAE5BP,IACHG,EAAS,IAAIK,MAAML,EAAQ,CACzBjD,IAAG,CAACuD,EAAQ7C,IACNb,OAAOkB,UAAUC,eAAe1B,KAAK6D,SAAYzC,GAC5CyC,SAAWzC,GAEbyC,SAAWK,iBAIxB,MAAMC,EAAcR,EACLQ,O,cCtBf7E,EAAOD,QAAUwC,QAAQ,yB,mjCCiBlB,MAAMuC,EAAU,CAACtD,EAAeuD,KAAhB,CACrBnC,YAAc,qBAAoBpB,EAClC8B,SAAWb,GAA6BuC,4BAAkBvC,EAAWjB,EAAOuD,KAGjEE,EAAe,CAACzD,EAAeuD,KAAhB,CAC1BnC,YAAc,kBAAiBpB,EAC/B8B,SAAWb,GAA6ByC,iCAAuBzC,EAAWjB,EAAOuD,KAGtEI,EAAY,CAAC3D,EAAeuD,KAAhB,CACvBnC,YAAc,uBAAsBpB,EACpC8B,SAAWb,GAA6B2C,8BAAoB3C,EAAWjB,EAAOuD,GAC9ErB,OAASjB,GAA6B4C,4BAAkB5C,EAAWjB,EAAOuD,KAI/DO,EAAY,CAACxE,EAAcU,EAAeuD,KAA9B,CACvBnC,YAAc,OAAM9B,KAAQU,KAC5B8B,SAAWb,GAA6B8C,8BAAoBzE,EAAM2B,EAAWjB,EAAOuD,KAGzES,EAAkB,CAAChE,EAAeuD,KAAhB,CAC7BnC,YAAc,6BAA4BpB,EAC1C8B,SAAWb,GAA6BgD,oCAA0BhD,EAAWjB,EAAOuD,KAGzEW,EAAO,CAACC,EAAkBZ,KAAnB,CAClBnC,YAAc,iBAAgB+C,EAC9BrC,SAAWb,GAA6BmD,yBAAenD,EAAWkD,EAAUZ,KAGjEc,EAAS,CAACC,EAAYf,KAAb,CACpBnC,YAAc,oBAAmBkD,EACjCxC,SAAWb,GAA6BsD,2BAAiBtD,EAAWqD,EAAIf,KAG7DiB,EAAO,CAACxE,EAAeuD,KAAhB,CAClBnC,YAAc,iBAAgBpB,EAC9BmC,mBAAoB,CAClB,qEACA,kEACA,uCACAZ,KAAK,IACPO,SAAWb,GAA6BwD,yBAAexD,EAAWjB,EAAOuD,KAG9DmB,EAAe,CAC1B1E,EACAuD,IACUiB,EAAKxE,EAAD,OAAauD,GAAb,IAAsBoB,OAAO,KAEhCC,EAAQ,CAAC5E,EAAeuD,KAAhB,CACnBnC,YAAc,kBAAiBpB,EAC/B8B,SAAWb,GAA6B4D,0BAAgB5D,EAAWjB,EAAOuD,M,s3CCtDrE,SAASuB,EACdC,EACAxB,GAEA,OAAOyB,iBAAWD,EAAD,OAAUxB,GAAV,IAAmB0B,QAAShC,K","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"flexible-testing-library-react\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flexible-testing-library-react\"] = factory();\n\telse\n\t\troot[\"flexible-testing-library-react\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = require(\"@testing-library/react\");","import {\n  waitFor,\n  getElementError,\n  waitForOptions,\n} from '@testing-library/react';\nimport type Query from './queries/Query';\n\nfunction getMultipleElementsFoundError(container: HTMLElement, query: Query): Error {\n  return getElementError(\n    [\n      `Found multiple elements ${query.description}.`,\n      query.multipleErrorDetail,\n      '\\n\\n(If this is intentional, then use `getAllBy`, `queryAllBy` or `findAllBy`).',\n    ].filter((p) => p).join(' '),\n    container,\n  );\n}\n\nfunction getNoElementFoundError(container: HTMLElement, query: Query): Error {\n  return getElementError(\n    [\n      `Unable to find any element ${query.description}.`,\n      query.missingErrorDetail,\n    ].filter((p) => p).join(' '),\n    container,\n  );\n}\n\nfunction elementListToArray(elements: NodeListOf<HTMLElement> | HTMLElement[]): HTMLElement[] {\n  if (!elements) {\n    return [];\n  }\n  if (Array.isArray(elements)) {\n    return elements;\n  }\n  return Array.from(elements);\n}\n\nexport const queryAllBy = (\n  container: HTMLElement,\n  query: Query,\n): HTMLElement[] => elementListToArray(query.queryAll(container));\n\nexport const queryBy = (\n  container: HTMLElement,\n  query: Query,\n): HTMLElement | null => {\n  const elements = queryAllBy(container, query);\n  if (elements.length > 1) {\n    throw getMultipleElementsFoundError(container, query);\n  }\n  return elements[0] || null;\n};\n\nexport const getAllBy = (\n  container: HTMLElement,\n  query: Query,\n): HTMLElement[] => {\n  const fn = query.getAll || query.queryAll;\n  const elements = elementListToArray(fn(container));\n  if (!elements.length) {\n    throw getNoElementFoundError(container, query);\n  }\n  return elements;\n};\n\nexport const getBy = (\n  container: HTMLElement,\n  query: Query,\n): HTMLElement => {\n  const elements = getAllBy(container, query);\n  if (elements.length > 1) {\n    throw getMultipleElementsFoundError(container, query);\n  }\n  return elements[0];\n};\n\nexport const findAllBy = (\n  container: HTMLElement,\n  query: Query,\n  waitOptions: waitForOptions,\n): Promise<HTMLElement[]> => waitFor(\n  () => getAllBy(container, query),\n  waitOptions,\n);\n\nexport const findBy = (\n  container: HTMLElement,\n  query: Query,\n  waitOptions: waitForOptions,\n): Promise<HTMLElement> => waitFor(\n  () => getBy(container, query),\n  waitOptions,\n);\n","import {\n  screen as baseScreen,\n  getQueriesForElement,\n} from '@testing-library/react';\nimport * as baseQueries from './baseQueries';\n\nconst body = typeof document !== 'undefined' ? document.body : undefined;\nlet screen = {\n  debug: baseScreen.debug,\n  ...getQueriesForElement(body!, baseQueries),\n};\nif (!body) {\n  screen = new Proxy(screen, {\n    get(target, key): unknown {\n      if (Object.prototype.hasOwnProperty.call(baseScreen, key)) {\n        return baseScreen[key as keyof typeof baseScreen];\n      }\n      return baseScreen.findAllByText;\n    },\n  });\n}\nconst constScreen = screen;\nexport default constScreen;\n","module.exports = require(\"@testing-library/dom\");","import {\n  queryAllByAltText,\n  queryAllByDisplayValue,\n  queryAllByLabelText,\n  getAllByLabelText,\n  queryAllByAttribute,\n  queryAllByPlaceholderText,\n  queryAllByRole,\n  queryAllByTestId,\n  queryAllByText,\n  queryAllByTitle,\n  MatcherOptions,\n  SelectorMatcherOptions,\n  ByRoleOptions,\n} from '@testing-library/react';\nimport type Query from './Query';\n\nexport const altText = (value: string, options?: MatcherOptions): Query => ({\n  description: `with the alt text ${value}`,\n  queryAll: (container): HTMLElement[] => queryAllByAltText(container, value, options),\n});\n\nexport const displayValue = (value: string, options?: MatcherOptions): Query => ({\n  description: `with the value ${value}`,\n  queryAll: (container): HTMLElement[] => queryAllByDisplayValue(container, value, options),\n});\n\nexport const labelText = (value: string, options?: SelectorMatcherOptions): Query => ({\n  description: `with the label text ${value}`,\n  queryAll: (container): HTMLElement[] => queryAllByLabelText(container, value, options),\n  getAll: (container): HTMLElement[] => getAllByLabelText(container, value, options),\n});\n\n// undocumented since *ByAttribute is undocumented in DOM Testing Library\nexport const attribute = (name: string, value: string, options?: MatcherOptions): Query => ({\n  description: `by [${name}=${value}]`,\n  queryAll: (container): HTMLElement[] => queryAllByAttribute(name, container, value, options),\n});\n\nexport const placeholderText = (value: string, options?: MatcherOptions): Query => ({\n  description: `with the placeholder text ${value}`,\n  queryAll: (container): HTMLElement[] => queryAllByPlaceholderText(container, value, options),\n});\n\nexport const role = (roleName: string, options?: ByRoleOptions): Query => ({\n  description: `with the role ${roleName}`,\n  queryAll: (container): HTMLElement[] => queryAllByRole(container, roleName, options),\n});\n\nexport const testId = (id: string, options?: MatcherOptions): Query => ({\n  description: `with the test ID ${id}`,\n  queryAll: (container): HTMLElement[] => queryAllByTestId(container, id, options),\n});\n\nexport const text = (value: string, options?: SelectorMatcherOptions): Query => ({\n  description: `with the text ${value}`,\n  missingErrorDetail: [\n    'This could be because the text is broken up by multiple elements. ',\n    'In this case, you can provide a function for your text matcher ',\n    'to make your matcher more flexible.',\n  ].join(''),\n  queryAll: (container): HTMLElement[] => queryAllByText(container, value, options),\n});\n\nexport const textFragment = (\n  value: string,\n  options?: Omit<SelectorMatcherOptions, 'exact'>,\n): Query => text(value, { ...options, exact: false });\n\nexport const title = (value: string, options?: MatcherOptions): Query => ({\n  description: `with the title ${value}`,\n  queryAll: (container): HTMLElement[] => queryAllByTitle(container, value, options),\n});\n","import type { ReactElement } from 'react';\nimport {\n  render as baseRender,\n  RenderOptions as BaseRenderOptions,\n  RenderResult as BaseRenderResult,\n} from '@testing-library/react';\nimport type Query from './queries/Query';\nimport screen from './screen';\nimport * as baseQueries from './baseQueries';\n\nexport * from '@testing-library/dom';\nexport { cleanup, act } from '@testing-library/react';\n\nexport type { Query };\nexport type RenderResult = BaseRenderResult<typeof baseQueries>;\nexport type RenderOptions = Omit<BaseRenderOptions, 'queries'>;\n\nexport function render(\n  ui: ReactElement,\n  options?: RenderOptions,\n): RenderResult {\n  return baseRender(ui, { ...options, queries: baseQueries });\n}\n\nexport { screen };\n\nexport * from './baseQueries';\nexport * from './queries';\n"],"sourceRoot":""}